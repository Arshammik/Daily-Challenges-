#!use/bin/python


# Euler Project
# Challenge Number 29

### Distinct powers

'''
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

'''




def Distinct_powers (n,m):
    terms = []
    for i in range (n,m+1):
        for j in range(n,m+1):
            A = i ** j
            #print (i,"in power of",j,"is",A) #for debugging
            terms.append(A)
    new = list(dict.fromkeys(terms)) # We Used "dict.fromkey()" for deletion duplication in our list 
    return new



print(len(Distinct_powers(2,100)))


TODO 9183
